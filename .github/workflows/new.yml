name: Docker Image CI Blog

on:
  push:
    branches: [ "new" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build VuePress project
        run: |
          export NODE_OPTIONS="--openssl-legacy-provider"
          yarn build
        env:
          NODE_OPTIONS: "--openssl-legacy-provider"

      - name: Verify build output
        run: |
          echo "📁 检查构建输出..."
          ls -la docs/.vuepress/dist/
          echo "✅ 构建完成"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_USER_PASSWORD }}

      - name: Build and push Docker image to Docker Hub
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USER_NAME }}/blog:main

          echo "🛠️ 构建镜像 $IMAGE_NAME"
          docker build . \
            --file Dockerfile \
            --tag $IMAGE_NAME

          echo "🚀 推送镜像到 Docker Hub"
          docker push $IMAGE_NAME


      - name: SSH into server and update services
        run: |
            echo "🔐 SSH 连接到远程服务器，准备部署..."
  
            sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no -p "${{ secrets.SERVER_PORT }}" "${{ secrets.SERVER_USER }}"@"${{ secrets.SERVER_PROD_IP }}" <<'EOF'
                echo "🚀 已进入服务器，开始更新服务..."
                cd /root/blog/
                bash up.sh
                echo "✅ 博客更新完成！"
            EOF